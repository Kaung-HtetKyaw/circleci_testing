version: 2.1

orbs:
  aws-ecr: circleci/aws-ecr@6.12.2
  aws-cli: circleci/aws-cli@2.0.3

executors:
  node-step:
    docker:
      - image: circleci/node

jobs:
  deps-install:
    executor: node-step
    steps:
      - checkout
      - restore_cache:
          keys:
            - yarn-n14-{{ checksum "yarn.lock" }}
            - yarn-n14
      - run:
          command: yarn install --frozen-lockfile
      - save_cache:
          key: yarn-n14-{{ checksum "yarn.lock" }}
          paths:
            - ~/.npmrc
            - ./node_modules
            - ./packages/node-deploy/node_modules
            - ./packages/api/node_modules
            - ./packages/frontend/node_modules
            - ./packages/ui/node_modules
      - persist_to_workspace:
          root: ~/project
          paths:
            - .npmrc
            - node_modules
            - ./packages/node-deploy/node_modules
            - ./packages/api/node_modules
            - ./packages/frontend/node_modules
            - ./packages/ui/node_modules

  validate-node-deploy:
    executor: node-step
    steps:
      - checkout
      - attach_workspace:
          at: ~/project
      - run:
          name: Linting
          command: yarn lint --format junit -o ./junit/js-lint-results.xml
          working_directory: ./packages/node-deploy
      - store_test_results:
          path: ~/project/packages/node-deploy/junit/

  validate-api:
    executor: node-step
    steps:
      - checkout
      - attach_workspace:
          at: ~/project
      - run:
          name: Linting
          command: yarn lint
          working_directory: ./packages/api
      - run:
          name: Building
          command: yarn build
          working_directory: ./packages/api
      - persist_to_workspace:
          root: ~/project
          paths:
            - packages/api/build

  validate-frontend:
    executor: node-step
    steps:
      - checkout
      - attach_workspace:
          at: ~/project
      - run:
          name: Building
          command: yarn build
          working_directory: ./packages/frontend
      - persist_to_workspace:
          root: ~/project
          paths:
            - packages/frontend/build

  validate-ui:
    executor: node-step
    steps:
      - checkout
      - attach_workspace:
          at: ~/project
      - run:
          name: Linting
          command: yarn lint
          working_directory: ./packages/ui
      - run:
          name: Building
          command: yarn build
          working_directory: ./packages/ui
      - persist_to_workspace:
          root: ~/project
          paths:
            - packages/ui/build

  pre-release:
    executor: node-step
    #    resource_class: medium+
    steps:
      - checkout
      - attach_workspace:
          at: ~/project
      - setup_remote_docker:
          version: 19.03.12
      #          docker_layer_caching: true
      - aws-ecr/ecr-login
      - run:
          name: pre-release
          command: node predeploy.js
          working_directory: ./packages/node-deploy
          no_output_timeout: 1h

  release:
    executor: node-step
    # resource_class: medium+
    steps:
      - checkout
      - attach_workspace:
          at: ~/project
      - setup_remote_docker:
          version: 19.03.12
        # docker_layer_caching: true
      - aws-ecr/ecr-login
      - run:
          name: semantic-release
          command: yarn semantic-release
          no_output_timeout: 1h

workflows:
  version: 2

  build:
    jobs:
      - deps-install
      - validate-node-deploy:
          requires:
            - deps-install
      - validate-ui:
          requires:
            - deps-install
      - validate-api:
          requires:
            - deps-install
      - validate-frontend:
          requires:
            - deps-install
            - validate-ui
            - validate-api
      - release:
          filters:
            branches:
              only:
                - /^stg\/[a-z]+$/
          requires:
            - validate-node-deploy
            - validate-ui
            - validate-api
            - validate-frontend
      - pre-release:
          filters:
            branches:
              only:
                - main
                - stable
          requires:
            - validate-node-deploy
            - validate-ui
            - validate-api
            - validate-frontend
